#요청수 제한
limit_req_zone $binary_remote_addr zone=addr_req_zone:10m rate=20r/s;

#단일 ip에서의 커넥션 수 제한
limit_conn_zone $binary_remote_addr zone=addr_cone_zone:10m;

upstream some-web-app-name {
    server web-app-1:8000 weight=1;
    server web-app-2:8000 weight=1;
}

server {
    listen 80;

    #이 servername은 별로 중요하지 않음(주석처리를 해도 됨). 다만 아래에서 변수명으로 사용하기 위함
    server_name cool-web-app.com;
    
    # 만약 아래와 같이 했을 경우, localhost로도 접속할 수 잇음(/etc/hosts에 localhost도 기록이 되어 있으므로)
    # server_name localhost;

    #만약 호스트가 (바로 위에서 설정한)server_name가 아니라면 return 444해라
    if ($host != $server_name){
        return 444;
    }

    #커넥션 연결 시간
    keepalive_timeout 40;

    #버퍼사이즈의 크기
    client_body_buffer_size 200k;
    client_header_buffer_size 2k;

    #클라이언트가 body에 넣을 수 있는 데이터의 크기. 보통 파일(사진) 업로드와 관련됨
    client_max_body_size 10m;

    #error_log, access_log 로그 저장 위치
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    location /{

        limit_req zone=addr_req_zone burst=10;
        limit_conn addr_cone_zone 10;

        proxy_intercept_errors on;

        # proxy_pass http://web-app-1:8000; #기존
        proxy_pass http://some-web-app-name; #로드밸런싱
        proxy_set_header Host $host;
    }

    #에러페이지 > (설정한 요청을 넘어서)에러가 발생했을 때 > /error.html페이지에서 찾는다
    error_page 400 401 402 403 500 501 502 503 /error.html;
    location = /error.html {
        root /;
        internal;
    }


    location /static/ {
        alias /static/ ;
    }
}